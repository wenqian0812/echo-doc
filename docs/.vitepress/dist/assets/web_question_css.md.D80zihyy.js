import{_ as a,c as s,o as e,a2 as n}from"./chunks/framework.mlmjWbz3.js";const g=JSON.parse('{"title":"CSS面试题","description":"","frontmatter":{},"headers":[],"relativePath":"web/question/css.md","filePath":"web/question/css.md"}'),t={name:"web/question/css.md"},i=n(`<h1 id="css面试题" tabindex="-1">CSS面试题 <a class="header-anchor" href="#css面试题" aria-label="Permalink to &quot;CSS面试题&quot;">​</a></h1><h2 id="content-visibility" tabindex="-1">content-visibility <a class="header-anchor" href="#content-visibility" aria-label="Permalink to &quot;content-visibility&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://juejin.cn/post/7168629736838463525</span></span></code></pre></div><h2 id="z-index问题" tabindex="-1">z-index问题 <a class="header-anchor" href="#z-index问题" aria-label="Permalink to &quot;z-index问题&quot;">​</a></h2><h2 id="垂直居中-水平居中" tabindex="-1">垂直居中, 水平居中 <a class="header-anchor" href="#垂直居中-水平居中" aria-label="Permalink to &quot;垂直居中, 水平居中&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>flex</span></span>
<span class="line"><span>position  relative absolute</span></span>
<span class="line"><span>transform  translate</span></span></code></pre></div><h2 id="实现一个进度条的方式" tabindex="-1">实现一个进度条的方式 <a class="header-anchor" href="#实现一个进度条的方式" aria-label="Permalink to &quot;实现一个进度条的方式&quot;">​</a></h2><h2 id="重绘和重排" tabindex="-1">重绘和重排 <a class="header-anchor" href="#重绘和重排" aria-label="Permalink to &quot;重绘和重排&quot;">​</a></h2><h2 id="常见的布局方法有哪些-他们的优缺点是什么" tabindex="-1">常见的布局方法有哪些？他们的优缺点是什么？ <a class="header-anchor" href="#常见的布局方法有哪些-他们的优缺点是什么" aria-label="Permalink to &quot;常见的布局方法有哪些？他们的优缺点是什么？&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>页面布局常用的方法有浮动、定位、flex、grid 网格布局、栅格系统布局</span></span>
<span class="line"><span>浮动：  优点：兼容性好。 缺点：浮动会脱离标准文档流，因此要清除浮动。我们解决好这个问题即可。</span></span>
<span class="line"><span>绝对定位 优点：快捷。 缺点：导致子元素也脱离了标准文档流，可实用性差。</span></span>
<span class="line"><span>flex 布局（CSS3 中出现的） 优点：解决上面两个方法的不足，flex 布局比较完美。移动端基本用 flex 布局。</span></span>
<span class="line"><span>网格布局（grid） CSS3 中引入的布局，很好用。代码量简化了很多。</span></span>
<span class="line"><span>利用网格布局实现的一个左右 300px 中间自适应的布局</span></span></code></pre></div><h2 id="谈谈盒子模型" tabindex="-1">谈谈盒子模型？ <a class="header-anchor" href="#谈谈盒子模型" aria-label="Permalink to &quot;谈谈盒子模型？&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>在标准盒子模型中，width 和 height 指的是内容区域的宽度和高度。</span></span>
<span class="line"><span>增加内边距、边框和外边距不会 影响内容区域的尺寸，但是会增加元素框的总尺寸。</span></span>
<span class="line"><span>IE 盒子模型中，width 和 height 指的是内容区域+border+padding的宽度和高度。</span></span></code></pre></div>`,12),l=[i];function p(o,c,h,d,r,u){return e(),s("div",null,l)}const v=a(t,[["render",p]]);export{g as __pageData,v as default};
