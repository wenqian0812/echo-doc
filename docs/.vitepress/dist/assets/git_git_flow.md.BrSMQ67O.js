import{_ as e,c as t,o,a2 as i}from"./chunks/framework.mlmjWbz3.js";const h=JSON.parse('{"title":"git 使用流程","description":"","frontmatter":{},"headers":[],"relativePath":"git/git_flow.md","filePath":"git/git_flow.md"}'),c={name:"git/git_flow.md"},d=i('<h1 id="git-使用流程" tabindex="-1">git 使用流程 <a class="header-anchor" href="#git-使用流程" aria-label="Permalink to &quot;git 使用流程&quot;">​</a></h1><ol><li><p><code>git add xxx</code>: 添加更新</p></li><li><p><code>git commit -m &#39;xxx&#39;</code>: 添加信息[feat, fix, chore, refactory, update]</p></li></ol><p><code>git commit -m &#39;feat: add new grpc method: ListUser&#39;</code><br><code>git commit -m &#39;fix: #9119 (用户列表没有用户状态)&#39;</code><br><code>git commit -m &#39;chore: .gitlab-ci.yml use new builder tag&#39;</code><br><code>git commit -m &#39;refactory: grpc method ListUser&#39;</code><br><code>git commit -m &#39;update: grpc method ListUser add cache&#39;</code></p><ol start="3"><li><p><code>git push origin HEAD:dev-xxx</code></p></li><li><p>在 gitlab 上发起合并请求</p></li><li><p>等待合并或者需要修改代码</p></li></ol><ul><li>若需修改代码, 修改完成后:</li></ul><p><code>git rebase -i HEAD~2</code>: 合并修改的 commit 信息<br><code>git push origin HEAD:dev-xxx -f</code>: 重新推送代码到 gitlab<br><code>再次发起合并请求</code></p><ul><li>代码合并后(例如合并至 dev 分支):</li></ul><p><code>git branch -D dev-xxx</code><br><code>git fetch origin dev</code><br><code>git checkout -b dev-xxx origin/dev</code><br><code>继续</code></p><ol start="6"><li>hotfix</li></ol><p><code>git fetch origin --tags</code></p><p><code>git checkout -b hotfix-v1.3.4 tags/v1.3.4</code></p><p>修改代码</p><p><code>git push origin HEAD:hotfix-v1.3.4</code></p><ol start="7"><li>过滤大文件 (当你不小心提交了大文件时)</li></ol><p>一旦提交（commit）了大文件, rebase 也无法从 git 中剔出提交</p><p>建议直接使用 <a href="https://github.com/newren/git-filter-repo" target="_blank" rel="noreferrer">git filter repo</a></p>',16),r=[d];function a(l,p,g,s,m,n){return o(),t("div",null,r)}const f=e(c,[["render",a]]);export{h as __pageData,f as default};
