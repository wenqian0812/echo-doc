import{_ as s,c as a,o as e,a2 as p}from"./chunks/framework.mlmjWbz3.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"other/ceph.md","filePath":"other/ceph.md"}'),n={name:"other/ceph.md"},i=p(`<h2 id="cephadm-安装ceph-v15准备" tabindex="-1"><code>cephadm</code> 安装<code>ceph v15</code>准备 <a class="header-anchor" href="#cephadm-安装ceph-v15准备" aria-label="Permalink to &quot;\`cephadm\` 安装\`ceph v15\`准备&quot;">​</a></h2><p>参考安装文档, 有问题可以直接留言，大家一起交流，以下都是部署的比较基础的东西</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://docs.ceph.com/en/latest/cephadm/</span></span>
<span class="line"><span>http://www.dtmao.cc/news_show_1027422.shtml</span></span></code></pre></div><blockquote><p>用的阿里云的三台机器进行测试，其中每台机器挂载了一块40G的数据盘，系统盘也为40G，系统为centos7.8</p></blockquote><ul><li>三台服务器</li></ul><table><thead><tr><th>hostname</th><th>IP</th></tr></thead><tbody><tr><td>node1</td><td>172.16.2.186</td></tr><tr><td>node2</td><td>172.16.2.184</td></tr><tr><td>node3</td><td>172.16.2.184</td></tr></tbody></table><ul><li>安装<code>docker</code></li></ul><p>参考<a href="https://www.runoob.com/docker/centos-docker-install.html" target="_blank" rel="noreferrer">https://www.runoob.com/docker/centos-docker-install.html</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span></span></code></pre></div><ul><li>设置hostname和修改hosts（每台服务器都需要设置hostname和修改hosts文件）</li></ul><p>设置hostname</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>vim /etc/hostname 然后写入hostname即可</span></span>
<span class="line"><span></span></span>
<span class="line"><span>hostnamectl set-hostname node1</span></span></code></pre></div><p>修改hosts(如下图所示)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>vim /etc/hosts</span></span></code></pre></div><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4771adca05e342b0a92ef2cc348e8a21~tplv-k3u1fbpfcp-watermark.image" alt=""></p><ul><li>禁用防火墙</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop firewalld</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable firewalld</span></span></code></pre></div><p><strong>接下来就开始我们的安装之旅把！</strong></p><h2 id="获取cephadm" tabindex="-1">获取<code>cephadm</code> <a class="header-anchor" href="#获取cephadm" aria-label="Permalink to &quot;获取\`cephadm\`&quot;">​</a></h2><blockquote><p><code>cephadm</code>其实就个<code>python3</code>的脚本而已</p></blockquote><p>连接到<code>node1</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/ceph/ceph/octopus/src/cephadm/cephadm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果wget不到该文件 直接浏览器访问复制文件内容到新建文件cephadm即可</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 赋予执行权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x cephadm</span></span></code></pre></div><h2 id="获取软件包" tabindex="-1">获取软件包 <a class="header-anchor" href="#获取软件包" aria-label="Permalink to &quot;获取软件包&quot;">​</a></h2><ul><li>尽管独立脚本足以启动群集，但是cephadm在主机上安装命令很方便。要安装提供cephadm八达通发行版命令的软件包，请运行以下命令</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./cephadm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-repo --release octopus</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./cephadm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><ul><li>cephadm通过运行which以下命令来确认该路径现在位于您的PATH中：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>which cephadm</span></span></code></pre></div><ul><li>成功的命令将返回以下内容：which cephadm</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/usr/sbin/cephadm</span></span></code></pre></div><h2 id="引导新的集群" tabindex="-1">引导新的集群 <a class="header-anchor" href="#引导新的集群" aria-label="Permalink to &quot;引导新的集群&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 172.16.2.186为node1的IP</span></span>
<span class="line"><span>cephadm bootstrap --mon-ip 172.16.2.186</span></span></code></pre></div><blockquote><p>安装完成后会返回一个dashboard页面 直接使用公网IP访问即可，主要确保安全组的端口畅通</p></blockquote><h2 id="将主机添加到集群中" tabindex="-1">将主机添加到集群中 <a class="header-anchor" href="#将主机添加到集群中" aria-label="Permalink to &quot;将主机添加到集群中&quot;">​</a></h2><p>要将每个新主机添加到群集，请执行两个步骤：</p><p>在新主机的根用户authorized_keys文件中安装群集的公共SSH密钥：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ssh-copy-id -f -i /etc/ceph/ceph.pub root@*&lt;new-host&gt;*</span></span></code></pre></div><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ssh-copy-id -f -i /etc/ceph/ceph.pub root@node1</span></span>
<span class="line"><span>ssh-copy-id -f -i /etc/ceph/ceph.pub root@node2</span></span></code></pre></div><p>告诉Ceph，新节点是集群的一部分：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ceph orch host add *newhost*</span></span></code></pre></div><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ceph orch host add node1</span></span>
<span class="line"><span>ceph orch host add node1</span></span></code></pre></div><ol start="5"><li>将磁盘转化为osd</li></ol><p>有几种创建新OSD的方法：</p><p>告诉Ceph使用任何可用和未使用的存储设备：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ceph orch apply osd --all-available-devices</span></span></code></pre></div><p>从特定主机上的特定设备创建OSD：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ceph orch daemon add osd *&lt;host&gt;*:*&lt;device-path&gt;*</span></span></code></pre></div><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ceph orch daemon add osd node1:/dev/vdb</span></span></code></pre></div><blockquote><p>注意该磁盘必须是干净的，未被分区的，如果已经使用，可以参考下面的方法</p></blockquote><p>部署完<code>ceph</code>之后 <code>cephadm shell</code> 进入容器内部， 然后执行擦除磁盘</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># Zap (erase!) a device so it can be re-used</span></span>
<span class="line"><span>orch device zap &lt;hostname&gt; &lt;path&gt; [--force]</span></span></code></pre></div><p><code>example</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ceph orch device zap node1 /dev/sdb --force</span></span></code></pre></div><h2 id="部署rgw" tabindex="-1">部署rgw <a class="header-anchor" href="#部署rgw" aria-label="Permalink to &quot;部署rgw&quot;">​</a></h2><p><strong>确保<code>ceph -s</code>的状态为<code>HEALTH_OK</code></strong></p><p><code>Cephadm</code>将<code>radosgw</code>部署为管理特定领域和区域的守护程序的集合。（有关领域和区域的更多信息，请参见Multi-Site。）</p><p>请注意，使用<code>cephadm</code>时，<code>radosgw</code>守护程序是通过监视器配置数据库而不是通过<code>ceph.conf</code>或命令行来配置的。如果该配置尚未就绪（通常在本 <code>client.rgw.&lt;realmname&gt;.&lt;zonename&gt;</code> 节中），那么radosgw守护程序将使用默认设置（例如，绑定到端口80）启动。</p><p>例如，要在node1、node2和node3上部署3个服务于myorg领域和us-east-1区域的rgw守护程序：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果尚未创建领域，请首先创建一个领域：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">radosgw-admin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> realm create --rgw-realm=myorg --default</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 接下来创建一个新的区域组：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">radosgw-admin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zonegroup create --rgw-zonegroup=default --master --default</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 接下来创建一个区域：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">radosgw-admin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zone create --rgw-zonegroup=default --rgw-zone=cn-east-1 --master --default</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 为特定领域和区域部署一组radosgw守护程序：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> orch apply rgw myorg cn-east-1 --placement=&quot;3 node1 node2 node3&quot;</span></span></code></pre></div><p>这一步完成之后，我们可以<code>ceph -s</code>看到</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f26b5432dc4c4795af9930ee00ee206a~tplv-k3u1fbpfcp-watermark.image" alt=""></p><p>接下来我们，为rgw创建一个用户和开启rgw的dashboard</p><blockquote><p>参考文档 <a href="https://blog.csdn.net/qq_40017427/article/details/106235456" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_40017427/article/details/106235456</a></p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 创建用户</span></span>
<span class="line"><span>radosgw-admin user create --uid=rgw --display-name=rgw --system</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 提供Dashboard证书 set-rgw-api-access-key set-rgw-api-secret-key是创建用户返回的</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 也可以使用 radosgw-admin user info --uid=rgw 查看</span></span>
<span class="line"><span>ceph dashboard set-rgw-api-access-key ZW1Y5IWDTB7K85P32H2A</span></span>
<span class="line"><span>ceph dashboard set-rgw-api-secret-key aehFzwMypF4V8Bm8A3baevHonEmu4E9a4oLZ1umh</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 禁用SSL 可禁用可不禁用</span></span>
<span class="line"><span>ceph dashboard set-rgw-api-ssl-verify False</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 启用rgw</span></span>
<span class="line"><span>ceph dashboard set-rgw-api-host node</span></span>
<span class="line"><span>ceph dashboard set-rgw-api-port 80</span></span>
<span class="line"><span>ceph dashboard set-rgw-api-scheme http</span></span>
<span class="line"><span>ceph dashboard set-rgw-api-user-id rgw</span></span>
<span class="line"><span></span></span>
<span class="line"><span>radosgw-admin period update --commit</span></span></code></pre></div><p>验证见参考文档</p><p>做完之一🙅步之后可以重启一下三台服务器</p><p>使用<code>python</code>访问<code>ceph</code>对象存储， 如果要前端访问存储资源时候可以用HTML标签来访问，不能浏览器直接访问（前提可以把<code>bucket</code>的<code>acl</code>设置成<code>public-read</code>或者把存储对象设置成<code>public-read</code>）</p><p>参考文档</p><p><a href="https://blog.csdn.net/nslogheyang/article/details/100115336" target="_blank" rel="noreferrer">https://blog.csdn.net/nslogheyang/article/details/100115336</a></p><h2 id="移除osd" tabindex="-1">移除osd <a class="header-anchor" href="#移除osd" aria-label="Permalink to &quot;移除osd&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先将该osd reweight 到0，也就是将权重降低到0，让数据副本分散到其它osd上</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> osd reweight </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 待集群重新恢复为ok后执行以下命令将osd踢出集群</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ceph stop osd.2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> osd out </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> osd crush remove osd.2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth del osd.2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> osd rm osd.2</span></span></code></pre></div><h2 id="rgw" tabindex="-1">RGW <a class="header-anchor" href="#rgw" aria-label="Permalink to &quot;RGW&quot;">​</a></h2><p>设置rgw端口</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceph</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config set client.rgw.myorg.cn-east-1 rgw_frontends &#39;beast port=7480&#39;</span></span></code></pre></div>`,76),t=[i];function l(c,h,o,d,r,g){return e(),a("div",null,t)}const b=s(n,[["render",l]]);export{u as __pageData,b as default};
